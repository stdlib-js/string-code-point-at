{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// VARIABLES //\n\n// Factors for converting individual surrogates\nvar Ox10000 = 0x10000|0; // 65536\nvar Ox400 = 0x400|0; // 1024\n\n// Range for a high surrogate\nvar OxD800 = 0xD800|0; // 55296\nvar OxDBFF = 0xDBFF|0; // 56319\n\n// Range for a low surrogate\nvar OxDC00 = 0xDC00|0; // 56320\nvar OxDFFF = 0xDFFF|0; // 57343\n\n\n// MAIN //\n\n/**\n* Returns a Unicode code point from a string at a specified position.\n*\n* ## Notes\n*\n* -   UTF-16 encoding uses one 16-bit unit for non-surrogates (U+0000 to U+D7FF and U+E000 to U+FFFF).\n* -   UTF-16 encoding uses two 16-bit units (surrogate pairs) for U+10000 to U+10FFFF and encodes U+10000-U+10FFFF by subtracting 0x10000 from the code point, expressing the result as a 20-bit binary, and splitting the 20 bits of 0x0-0xFFFFF as upper and lower 10-bits. The respective 10-bits are stored in two 16-bit words: a high and a low surrogate.\n*\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} idx - position\n* @param {boolean} [backward=false] - backward iteration for low surrogates\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a number having a nonnegative integer\n* @throws {TypeError} third argument must be a boolean\n* @throws {RangeError} position must be a valid index in string\n* @returns {NonNegativeInteger} code point\n*\n* @example\n* var out = codePointAt( 'last man standing', 4 );\n* // returns 32\n*\n* @example\n* var out = codePointAt( 'presidential election', 8, true );\n* // returns 116\n*\n* @example\n* var out = codePointAt( 'अनुच्छेद', 2 );\n* // returns 2369\n*\n* @example\n* var out = codePointAt( '🌷', 1, true );\n* // returns 127799\n*/\nfunction codePointAt( str, idx, backward ) {\n\tvar code;\n\tvar FLG;\n\tvar low;\n\tvar hi;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '0h83N', str ) );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a valid position (i.e., a nonnegative integer). Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= str.length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Must provide a valid position (i.e., within string bounds). Value: `%u`.', idx ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isBoolean( backward ) ) {\n\t\t\tthrow new TypeError( format( '0h8B3', backward ) );\n\t\t}\n\t\tFLG = backward;\n\t} else {\n\t\tFLG = false;\n\t}\n\tcode = str.charCodeAt( idx );\n\n\t// High surrogate\n\tif ( code >= OxD800 && code <= OxDBFF && idx < str.length - 1 ) {\n\t\thi = code;\n\t\tlow = str.charCodeAt( idx+1 );\n\t\tif ( OxDC00 <= low && low <= OxDFFF ) {\n\t\t\treturn ( ( hi - OxD800 ) * Ox400 ) + ( low - OxDC00 ) + Ox10000;\n\t\t}\n\t\treturn hi;\n\t}\n\t// Low surrogate - support only if backward iteration is desired\n\tif ( FLG ) {\n\t\tif ( code >= OxDC00 && code <= OxDFFF && idx >= 1 ) {\n\t\t\thi = str.charCodeAt( idx-1 );\n\t\t\tlow = code;\n\t\t\tif ( OxD800 <= hi && hi <= OxDBFF ) {\n\t\t\t\treturn ( ( hi - OxD800 ) * Ox400 ) + ( low - OxDC00 ) + Ox10000;\n\t\t\t}\n\t\t\treturn low;\n\t\t}\n\t}\n\treturn code;\n}\n\n\n// EXPORTS //\n\nmodule.exports = codePointAt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a Unicode code point from a string at a specified position.\n*\n* @module @stdlib/string-code-point-at\n*\n* @example\n* var codePointAt = require( '@stdlib/string-code-point-at' );\n*\n* var out = codePointAt( 'अनुच्छेद', 2 );\n* // returns 2369\n*\n* out = codePointAt( '🌷', 1, true );\n* // returns 127799\n*/\n\n// MODULES //\n\nvar codePointAt = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = codePointAt;\n"],"names":["isBoolean","require$$0","isPrimitive","isString","require$$1","isNonNegativeInteger","require$$2","format","require$$3","lib","str","idx","backward","code","FLG","low","hi","TypeError","length","RangeError","arguments","charCodeAt"],"mappings":";;oWAsBA,IAAIA,EAAYC,EAAuCC,YACnDC,EAAWC,EAAsCF,YACjDG,EAAuBC,EAAmDJ,YAC1EK,EAASC,EAyGb,ICxFAC,EDqCA,SAAsBC,EAAKC,EAAKC,GAC/B,IAAIC,EACAC,EACAC,EACAC,EAEJ,IAAMb,EAAUO,GACf,MAAM,IAAIO,UAAWV,EAAQ,QAASG,IAEvC,IAAML,EAAsBM,GAC3B,MAAM,IAAIM,UAAWV,EAAQ,8FAA+FI,IAE7H,GAAKA,GAAOD,EAAIQ,OACf,MAAM,IAAIC,WAAYZ,EAAQ,6FAA8FI,IAE7H,GAAKS,UAAUF,OAAS,EAAI,CAC3B,IAAMlB,EAAWY,GAChB,MAAM,IAAIK,UAAWV,EAAQ,QAASK,IAEvCE,EAAMF,OAENE,GAAM,EAKP,OAHAD,EAAOH,EAAIW,WAAYV,KAnEX,OAsEWE,GArEX,OAqE6BF,EAAMD,EAAIQ,OAAS,GAC3DF,EAAKH,EAnEM,QAoEXE,EAAML,EAAIW,WAAYV,EAAI,KACJI,GApEX,MARD,MA6EEC,EA1ED,QA0E6BD,EAtE7B,OARC,MAgFLC,GAGHF,GACCD,GA5EM,OA4EYA,GA3EZ,OA2E8BF,GAAO,GAE/CI,EAAMF,EAlFI,QAiFVG,EAAKN,EAAIW,WAAYV,EAAI,KAEJK,GAlFX,MAJD,MAuFGA,EApFF,QAoF8BD,EAhF9B,OARC,MA0FJA,GAGFF"}